type User @entity {
  id: ID! # Address
  name: Bytes
  dragons: [Dragon!] @derivedFrom(field: "owner")
  eggs: [Egg!] @derivedFrom(field: "owner")
  goldAuction: GoldAuction
}

type Dragon @entity {
  id: ID!
  owner: User!
  tactics: DragonTactics!
  auction: Auction
  name: Bytes
}

type DragonTactics @entity {
  id: ID!
  melee: Int
  attack: Int
}

type Egg @entity {
  id: ID!
  owner: User!
  isInNest: Boolean
  isHatched: Boolean
  auction: Auction
}

type Auction @entity {
  id: ID!
  type: AuctionType!
  currency: Currency!
  status: AuctionStatus!
  startPrice: BigInt!
  endPrice: BigInt!
  seller: User!
  period: Int!
  created: BigInt!
  buyer: User
  purchasePrice: BigInt
  ended: BigInt
}

type GoldAuction @entity {
  id: ID!
  type: GoldOrderType!
  status: AuctionStatus!
  seller: User!
  price: BigInt!
  amount: BigInt!
  created: BigInt!
  buyer: User
  purchaseAmount: BigInt
  ended: BigInt
}

enum AuctionStatus {
  active
  canceled
  fulfilled
}

enum AuctionType {
  dragonSale
  eggSale
  dragonBreeding
}

enum Currency {
  gold
  ether
}

enum GoldOrderType {
  sell
  buy
}
